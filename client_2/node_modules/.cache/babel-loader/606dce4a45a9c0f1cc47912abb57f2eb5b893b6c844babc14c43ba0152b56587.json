{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xluxf\\\\Desktop\\\\Projects\\\\React\\\\ScholarshipFinder\\\\client_2\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport FetchScholarshipsByGPA from './components/fetch-scholarship-by-gpa.tsx';\n\n// //data will be the string we send from our server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiCall = async () => {\n  await fetch('http://localhost:3001/data').then(data => {\n    //this console.log will be in our frontend console\n    console.log(data);\n  });\n};\nconst apiPost = async () => {\n  await fetch('http://localhost:3001/data', {\n    method: \"POST\",\n    body: JSON.stringify({\n      name: \"Bob Martin Memorial Scholarship\",\n      minimum_credits_needed: 6,\n      race: \"all\",\n      reward_amount: 1500,\n      gpa: 2.5,\n      link: \"https://sps-cuny.scholarships.ngwebsolutions.com/CMXAdmin/Cmx_Content.aspx?cpId=1254\"\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    //this console.log will be in our frontend console\n    console.log(response.json());\n  });\n};\nfunction App() {\n  _s();\n  const [scholarships, setScholarships] = React.useState([]);\n\n  // const handleFetchByGPA = async (gpa) => {\n  //   try {\n  //     const scholarships = await FetchScholarshipsByGPA(gpa);\n  //     console.log('Fetched scholarships:', scholarships); // Log the response\n\n  //     console.log('Updated state:', scholarships); // Log the updated state\n  //   } catch (error) {\n  //     console.error('Error fetching scholarships:', error);\n  //   }\n  // };\n\n  // const handleFetchByGPA = async (gpa) => {\n  //   const scholarships = await FetchScholarshipsByGPA(gpa);\n\n  //   console.log('Fetched scholarships:', 'scholarships'); // Log the response\n  //   console.log('Updated state:', 'scholarships'); // Log the updated\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(FetchScholarshipsByGPA, {\n        setScholarships: setScholarships\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), scholarships.length > 0 ? scholarships.map(scholarship => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: scholarship.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: scholarship.awardAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this)]\n      }, scholarship.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No scholarships found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"W+HKEck9oNCR00fprSUFAFje2uc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","FetchScholarshipsByGPA","jsxDEV","_jsxDEV","apiCall","fetch","then","data","console","log","apiPost","method","body","JSON","stringify","name","minimum_credits_needed","race","reward_amount","gpa","link","headers","response","json","App","_s","scholarships","setScholarships","useState","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","scholarship","awardAmount","_c","$RefreshReg$"],"sources":["C:/Users/xluxf/Desktop/Projects/React/ScholarshipFinder/client_2/src/App.tsx"],"sourcesContent":["\r\nimport React, {useState} from 'react';\r\nimport './App.css';\r\nimport AddNewScholarship from './components/add-new-scholarship.tsx';\r\nimport ScholarshipList from './components/scholarship-list.tsx';\r\nimport FetchScholarshipsByGPA from './components/fetch-scholarship-by-gpa.tsx';\r\n\r\n// //data will be the string we send from our server\r\nconst apiCall = async () => {\r\n  await fetch('http://localhost:3001/data').then((data) => {\r\n    //this console.log will be in our frontend console\r\n    console.log(data)\r\n  })\r\n}\r\nconst apiPost = async () => {\r\n  await fetch('http://localhost:3001/data', {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ name :\"Bob Martin Memorial Scholarship\",\r\n                          minimum_credits_needed: 6,\r\n                          race: \"all\",\r\n                          reward_amount: 1500,\r\n                          gpa: 2.5,\r\n                          link: \"https://sps-cuny.scholarships.ngwebsolutions.com/CMXAdmin/Cmx_Content.aspx?cpId=1254\"\r\n} ),\r\n    headers: { 'Content-Type': 'application/json'}\r\n  }).then((response) => {\r\n    //this console.log will be in our frontend console\r\n    console.log(response.json())\r\n  })\r\n}\r\n\r\ninterface Scholarship {\r\n  name: string;\r\n  income_range: string;\r\n  race: string;\r\n  awardAmount: string\r\n}\r\n\r\nfunction App() {\r\n  const [scholarships, setScholarships] = React.useState<Scholarship[]>([]);\r\n\r\n  // const handleFetchByGPA = async (gpa) => {\r\n  //   try {\r\n  //     const scholarships = await FetchScholarshipsByGPA(gpa);\r\n  //     console.log('Fetched scholarships:', scholarships); // Log the response\r\n\r\n  //     console.log('Updated state:', scholarships); // Log the updated state\r\n  //   } catch (error) {\r\n  //     console.error('Error fetching scholarships:', error);\r\n  //   }\r\n  // };\r\n\r\n  // const handleFetchByGPA = async (gpa) => {\r\n  //   const scholarships = await FetchScholarshipsByGPA(gpa);\r\n    \r\n  //   console.log('Fetched scholarships:', 'scholarships'); // Log the response\r\n  //   console.log('Updated state:', 'scholarships'); // Log the updated\r\n    \r\n  // }\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {/* <AddNewScholarship onSuccess={true} /> */}\r\n        <FetchScholarshipsByGPA setScholarships={setScholarships} />\r\n        {scholarships.length > 0 ? (\r\n          scholarships.map((scholarship) => (\r\n            <div key={scholarship.name}>\r\n                  <h1>{scholarship.name}</h1>\r\n                  <h1>{scholarship.awardAmount}</h1>\r\n          </div>\r\n          ))\r\n        ) : (\r\n          <p>No scholarships found.</p>\r\n        )}\r\n        {/* {scholarships.map()} */}\r\n        {/* <ScholarshipList initialScholarship={undefined} onScholarshipClick={undefined} /> */}\r\n\r\n        {/* <button onClick={apiCall}>Make API Call</button> */}\r\n        {/* <button onClick={apiPost}>Post Data</button> */}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App"],"mappings":";;AACA,OAAOA,KAAK,MAAkB,OAAO;AACrC,OAAO,WAAW;AAGlB,OAAOC,sBAAsB,MAAM,2CAA2C;;AAE9E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B,MAAMC,KAAK,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;IACvD;IACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC,CAAC;AACJ,CAAC;AACD,MAAMG,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B,MAAML,KAAK,CAAC,4BAA4B,EAAE;IACxCM,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,IAAI,EAAE,iCAAiC;MACxCC,sBAAsB,EAAE,CAAC;MACzBC,IAAI,EAAE,KAAK;MACXC,aAAa,EAAE,IAAI;MACnBC,GAAG,EAAE,GAAG;MACRC,IAAI,EAAE;IAChC,CAAE,CAAC;IACCC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAkB;EAC/C,CAAC,CAAC,CAACf,IAAI,CAAEgB,QAAQ,IAAK;IACpB;IACAd,OAAO,CAACC,GAAG,CAACa,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC;AACJ,CAAC;AASD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3B,KAAK,CAAC4B,QAAQ,CAAgB,EAAE,CAAC;;EAEzE;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;;EAGA,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB3B,OAAA;MAAQ0B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAE5B3B,OAAA,CAACF,sBAAsB;QAAC0B,eAAe,EAAEA;MAAgB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3DR,YAAY,CAACS,MAAM,GAAG,CAAC,GACtBT,YAAY,CAACU,GAAG,CAAEC,WAAW,iBAC3BlC,OAAA;QAAA2B,QAAA,gBACM3B,OAAA;UAAA2B,QAAA,EAAKO,WAAW,CAACtB;QAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3B/B,OAAA;UAAA2B,QAAA,EAAKO,WAAW,CAACC;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAF9BG,WAAW,CAACtB,IAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGvB,CACJ,CAAC,gBAEF/B,OAAA;QAAA2B,QAAA,EAAG;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC7B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACT,EAAA,CA9CQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAgDZ,eAAeA,GAAG;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}