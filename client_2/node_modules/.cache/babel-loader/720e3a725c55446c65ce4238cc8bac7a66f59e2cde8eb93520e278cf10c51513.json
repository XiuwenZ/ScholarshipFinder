{"ast":null,"code":"export const addScholarship = async data => {\n  await fetch('http://localhost:3001/data', {\n    method: \"POST\",\n    body: JSON.stringify({\n      data\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    //this console.log will be in our frontend console\n    console.log(response.json());\n  });\n};\nexport const fetchScholarshipList = async () => {\n  const response = await fetch('http://localhost:3001/data');\n  const data = response.json();\n  return data;\n};\nexport const fetchScholarship = async name => {\n  const response = await fetch('http://localhost:3001/data');\n  const data = response.json();\n  return data;\n};\nexport const fetchScholarshipByGPA = async gpa => {\n  const response = await fetch(`http://localhost:3001/data/gpa=${gpa}`);\n  const data = response.json();\n  return data;\n};","map":{"version":3,"names":["addScholarship","data","fetch","method","body","JSON","stringify","headers","then","response","console","log","json","fetchScholarshipList","fetchScholarship","name","fetchScholarshipByGPA","gpa"],"sources":["/Users/xiuwenzhu/Desktop/Brooklyn College/CTP/ScholarshipFinder/client/src/api-client.ts"],"sourcesContent":["export const addScholarship = async(data) => {\n    await fetch('http://localhost:3001/data', {\n    method: \"POST\",\n    body: JSON.stringify({ data } ),\n    headers: { 'Content-Type': 'application/json'}\n  }).then((response) => {\n    //this console.log will be in our frontend console\n    console.log(response.json())\n  })\n}\n\nexport const fetchScholarshipList = async () => {\n  const response = await fetch('http://localhost:3001/data')\n  const data = response.json()\n  return data\n}\n\nexport const fetchScholarship = async (name: any) => {\n  const response = await fetch('http://localhost:3001/data')\n  const data = response.json()\n  return data\n}\n\nexport const fetchScholarshipByGPA = async (gpa) => {\n  const response = await fetch(`http://localhost:3001/data/gpa=${gpa}`)\n  const data = response.json()\n  return data\n}\n\n"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,MAAMC,IAAI,IAAK;EACzC,MAAMC,KAAK,CAAC,4BAA4B,EAAE;IAC1CC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL;IAAK,CAAE,CAAC;IAC/BM,OAAO,EAAE;MAAE,cAAc,EAAE;IAAkB;EAC/C,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;IACpB;IACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,MAAMJ,QAAQ,GAAG,MAAMP,KAAK,CAAC,4BAA4B,CAAC;EAC1D,MAAMD,IAAI,GAAGQ,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC5B,OAAOX,IAAI;AACb,CAAC;AAED,OAAO,MAAMa,gBAAgB,GAAG,MAAOC,IAAS,IAAK;EACnD,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAAC,4BAA4B,CAAC;EAC1D,MAAMD,IAAI,GAAGQ,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC5B,OAAOX,IAAI;AACb,CAAC;AAED,OAAO,MAAMe,qBAAqB,GAAG,MAAOC,GAAG,IAAK;EAClD,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAAC,kCAAkCe,GAAG,EAAE,CAAC;EACrE,MAAMhB,IAAI,GAAGQ,QAAQ,CAACG,IAAI,CAAC,CAAC;EAC5B,OAAOX,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}