{"ast":null,"code":"var _jsxFileName = \"/Users/xiuwenzhu/Desktop/Brooklyn College/CTP/ScholarshipFinder/client/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport ScholarshipList from './components/scholarship-list.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// //data will be the string we send from our server\nconst apiCall = async () => {\n  await fetch('http://localhost:3001/data').then(data => {\n    //this console.log will be in our frontend console\n    console.log(data);\n  });\n};\nconst apiPost = async () => {\n  await fetch('http://localhost:3001/data', {\n    method: \"POST\",\n    body: JSON.stringify({\n      name: \"Bob Martin Memorial Scholarship\",\n      minimum_credits_needed: 6,\n      race: \"all\",\n      reward_amount: 1500,\n      gpa: 2.5,\n      link: \"https://sps-cuny.scholarships.ngwebsolutions.com/CMXAdmin/Cmx_Content.aspx?cpId=1254\"\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    //this console.log will be in our frontend console\n    console.log(response.json());\n  });\n};\nfunction App() {\n  // const [scholarships, setScholarships] = useState([]);\n\n  // const handleFetchByGPA = async (gpa) => {\n  //   try {\n  //     const scholarships = await FetchScholarshipsByGPA(gpa);\n  //     console.log('Fetched scholarships:', scholarships); // Log the response\n\n  //     console.log('Updated state:', scholarships); // Log the updated state\n  //   } catch (error) {\n  //     console.error('Error fetching scholarships:', error);\n  //   }\n  // };\n  const handleFetchByGPA = () => {\n    console.log('Fetched scholarships:', 'scholarships'); // Log the response\n    console.log('Updated state:', 'scholarships'); // Log the updated\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(ScholarshipList, {\n        initialScholarship: undefined,\n        onScholarshipClick: undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: apiCall,\n        children: \"Make API Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ScholarshipList","jsxDEV","_jsxDEV","apiCall","fetch","then","data","console","log","apiPost","method","body","JSON","stringify","name","minimum_credits_needed","race","reward_amount","gpa","link","headers","response","json","App","handleFetchByGPA","className","children","initialScholarship","undefined","onScholarshipClick","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/xiuwenzhu/Desktop/Brooklyn College/CTP/ScholarshipFinder/client/src/App.tsx"],"sourcesContent":["\nimport React, {useState} from 'react';\nimport './App.css';\nimport AddNewScholarship from './components/add-new-scholarship.tsx';\nimport ScholarshipList from './components/scholarship-list.tsx';\nimport FetchScholarshipsByGPA from './components/fetch-scholarship-by-gpa.tsx';\n\n// //data will be the string we send from our server\nconst apiCall = async () => {\n  await fetch('http://localhost:3001/data').then((data) => {\n    //this console.log will be in our frontend console\n    console.log(data)\n  })\n}\nconst apiPost = async () => {\n  await fetch('http://localhost:3001/data', {\n    method: \"POST\",\n    body: JSON.stringify({ name :\"Bob Martin Memorial Scholarship\",\n                          minimum_credits_needed: 6,\n                          race: \"all\",\n                          reward_amount: 1500,\n                          gpa: 2.5,\n                          link: \"https://sps-cuny.scholarships.ngwebsolutions.com/CMXAdmin/Cmx_Content.aspx?cpId=1254\"\n} ),\n    headers: { 'Content-Type': 'application/json'}\n  }).then((response) => {\n    //this console.log will be in our frontend console\n    console.log(response.json())\n  })\n}\n\n\n\nfunction App() {\n  // const [scholarships, setScholarships] = useState([]);\n\n  // const handleFetchByGPA = async (gpa) => {\n  //   try {\n  //     const scholarships = await FetchScholarshipsByGPA(gpa);\n  //     console.log('Fetched scholarships:', scholarships); // Log the response\n\n  //     console.log('Updated state:', scholarships); // Log the updated state\n  //   } catch (error) {\n  //     console.error('Error fetching scholarships:', error);\n  //   }\n  // };\n  const handleFetchByGPA = () => {\n    console.log('Fetched scholarships:', 'scholarships'); // Log the response\n    console.log('Updated state:', 'scholarships'); // Log the updated\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <AddNewScholarship onSuccess={true} /> */}\n        {/* <FetchScholarshipsByGPA onSubmit={handleFetchByGPA} /> */}\n        <ScholarshipList initialScholarship={undefined} onScholarshipClick={undefined} />\n\n        <button onClick={apiCall}>Make API Call</button>\n        {/* <button onClick={apiPost}>Post Data</button> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App"],"mappings":";AACA,OAAOA,KAAK,MAAkB,OAAO;AACrC,OAAO,WAAW;AAElB,OAAOC,eAAe,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhE;AACA,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B,MAAMC,KAAK,CAAC,4BAA4B,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;IACvD;IACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC,CAAC;AACJ,CAAC;AACD,MAAMG,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B,MAAML,KAAK,CAAC,4BAA4B,EAAE;IACxCM,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,IAAI,EAAE,iCAAiC;MACxCC,sBAAsB,EAAE,CAAC;MACzBC,IAAI,EAAE,KAAK;MACXC,aAAa,EAAE,IAAI;MACnBC,GAAG,EAAE,GAAG;MACRC,IAAI,EAAE;IAChC,CAAE,CAAC;IACCC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAkB;EAC/C,CAAC,CAAC,CAACf,IAAI,CAAEgB,QAAQ,IAAK;IACpB;IACAd,OAAO,CAACC,GAAG,CAACa,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC;AACJ,CAAC;AAID,SAASC,GAAGA,CAAA,EAAG;EACb;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BjB,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE,cAAc,CAAC,CAAC,CAAC;IACtDD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC,CAAC;EACjD,CAAC;EAGD,oBACEN,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBxB,OAAA;MAAQuB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAG5BxB,OAAA,CAACF,eAAe;QAAC2B,kBAAkB,EAAEC,SAAU;QAACC,kBAAkB,EAAED;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEjF/B,OAAA;QAAQgC,OAAO,EAAE/B,OAAQ;QAAAuB,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACE,EAAA,GA/BQZ,GAAG;AAiCZ,eAAeA,GAAG;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}