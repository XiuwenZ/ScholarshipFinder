{"ast":null,"code":"var _jsxFileName = \"/Users/xiuwenzhu/Desktop/Brooklyn College/CTP/ScholarshipFinder/client/src/components/add-new-scholarship.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { addScholarship, fetchScholarshipByGPA } from \"../api-client.ts\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddNewScholarship = ({\n  onSuccess\n}) => {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [scholarships, setScholarships] = useState([]);\n  const [filteredScholarships, setFilteredScholarships] = useState([]); // State to store filtered scholarships\n\n  // Fetch scholarships on component mount\n  useEffect(() => {\n    const fetchScholarships = async () => {\n      try {\n        const allScholarships = await fetchScholarshipByGPA(); // Get all scholarships initially\n        setScholarships(allScholarships);\n        setFilteredScholarships(allScholarships); // Set filteredScholarships to all initially\n      } catch (error) {\n        console.error('Error fetching scholarships:', error);\n      }\n    };\n    fetchScholarships();\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const newScholarshipData = {\n      scholarshipName: form.scholarshipName.value,\n      link: form.link.value,\n      gpa: form.gpa.value\n    };\n    const newScholarship = await addScholarship(newScholarshipData);\n    // if (newScholarship?.name) {\n    //   form.reset();\n    //   onSuccess(newScholarship);\n    // }\n  };\n  const handleFetchByGPA = async event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const gpa = form.gpa.value;\n    try {\n      const allScholarships = await fetchScholarshipByGPA(gpa); // Fetch scholarships based on GPA\n      setScholarships(allScholarships); // Update all scholarships state (for reference)\n      const filteredScholarships = allScholarships.filter(scholarship => scholarship.gpa <= gpa // Filter scholarships by entered gpa\n      );\n      setFilteredScholarships(filteredScholarships); // Update filtered scholarships state for display\n    } catch (error) {\n      console.error('Error fetching scholarships:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-new-scholarship\",\n    children: [!showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"link\",\n      onClick: () => setShowForm(true),\n      children: \"Add New Scholarship\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"scholarship Name\",\n        name: \"scholarshipName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"scholarship link\",\n        name: \"link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"gpa requierment\",\n        name: \"gpa\",\n        rows: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sumbit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFetchByGPA,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter GPA to fetch scholarships\",\n        name: \"gpa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Fetch Scholarships\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scholarship-list\",\n      children: filteredScholarships.length > 0 ? filteredScholarships.map((scholarship, index) => {\n        console.log('Rendering scholarship:', scholarship); // Log each scholarship\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scholarship-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scholarship-gpa\",\n            children: \"hi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No scholarships found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AddNewScholarship, \"sxnD4YD4BEgFcC5P2PqAswb8G/w=\");\n_c = AddNewScholarship;\nexport default AddNewScholarship;\nvar _c;\n$RefreshReg$(_c, \"AddNewScholarship\");","map":{"version":3,"names":["useState","useEffect","addScholarship","fetchScholarshipByGPA","React","jsxDEV","_jsxDEV","AddNewScholarship","onSuccess","_s","showForm","setShowForm","scholarships","setScholarships","filteredScholarships","setFilteredScholarships","fetchScholarships","allScholarships","error","console","handleSubmit","event","preventDefault","form","currentTarget","newScholarshipData","scholarshipName","value","link","gpa","newScholarship","handleFetchByGPA","filter","scholarship","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","name","rows","length","map","index","log","_c","$RefreshReg$"],"sources":["/Users/xiuwenzhu/Desktop/Brooklyn College/CTP/ScholarshipFinder/client/src/components/add-new-scholarship.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { addScholarship, fetchScholarshipByGPA } from \"../api-client.ts\";\nimport React from \"react\";\n\nconst AddNewScholarship = ({ onSuccess }) => {\n  const [showForm, setShowForm] = useState(false);\n  const [scholarships, setScholarships] = useState([]);\n  const [filteredScholarships, setFilteredScholarships] = useState([]); // State to store filtered scholarships\n\n  // Fetch scholarships on component mount\n  useEffect(() => {\n    const fetchScholarships = async () => {\n      try {\n        const allScholarships = await fetchScholarshipByGPA(); // Get all scholarships initially\n        setScholarships(allScholarships);\n        setFilteredScholarships(allScholarships); // Set filteredScholarships to all initially\n      } catch (error) {\n        console.error('Error fetching scholarships:', error);\n      }\n    };\n    fetchScholarships();\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const newScholarshipData = {\n      scholarshipName: form.scholarshipName.value,\n      link: form.link.value,\n      gpa: form.gpa.value,\n    };\n    const newScholarship = await addScholarship(newScholarshipData);\n    // if (newScholarship?.name) {\n    //   form.reset();\n    //   onSuccess(newScholarship);\n    // }\n  };\n\n  const handleFetchByGPA = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const gpa = form.gpa.value;\n    try {\n      const allScholarships = await fetchScholarshipByGPA(gpa); // Fetch scholarships based on GPA\n      setScholarships(allScholarships); // Update all scholarships state (for reference)\n      const filteredScholarships = allScholarships.filter(\n        (scholarship) => scholarship.gpa <= gpa // Filter scholarships by entered gpa\n      );\n      setFilteredScholarships(filteredScholarships); // Update filtered scholarships state for display\n    } catch (error) {\n      console.error('Error fetching scholarships:', error);\n    }\n  };\n\n  return (\n    <div className=\"add-new-scholarship\">\n      {!showForm && (\n        <div className=\"link\" onClick={() => setShowForm(true)}>\n          Add New Scholarship\n        </div>\n      )}\n\n      {showForm && (\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"scholarship Name\"\n            name=\"scholarshipName\"\n          />\n          <input\n            type=\"text\"\n            placeholder=\"scholarship link\"\n            name=\"link\"\n          />\n          <textarea\n            placeholder=\"gpa requierment\"\n            name=\"gpa\"\n            rows={5}\n          />\n          <button type=\"submit\">Sumbit</button>\n        </form>\n      )}\n\n      <form onSubmit={handleFetchByGPA}>\n        <input\n          type=\"text\"\n          placeholder=\"Enter GPA to fetch scholarships\"\n          name=\"gpa\"\n        />\n        <button type=\"submit\">Fetch Scholarships</button>\n      </form>\n\n      <div className=\"scholarship-list\">\n        {filteredScholarships.length > 0 ? (\n          filteredScholarships.map((scholarship, index) => {\n            console.log('Rendering scholarship:', scholarship); // Log each scholarship\n            return (\n              <div key={index} className=\"scholarship-item\">\n                {/* Display scholarship details here */}\n                <div className=\"scholarship-gpa\">hi</div> {/* Assuming gpa is a property */}\n              </div>\n            );\n          })\n        ) : (\n          <p>No scholarships found</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AddNewScholarship;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}